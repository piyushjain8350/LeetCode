class Solution {
public:

    // Helper function to convert a single Roman numeral character to its integer value
    int num(char c){
        if(c == 'I'){
            return 1;
        }
        else if(c == 'V'){
            return 5;
        }
        else if(c == 'X'){
            return 10;
        }
        else if(c == 'L'){
            return 50;
        }
        else if(c == 'C'){
            return 100;
        }
        else if(c == 'D'){
            return 500;
        }
        else{
            return 1000; // for 'M'
        }
    }

    // Function to convert a Roman numeral string to an integer
    int romanToInt(string s) {
        int sum = 0;      // To store the final integer value
        int index = 0;    // Pointer to traverse the string

        // Loop through the string up to the second last character
        for(index; index < s.size() - 1; index++){
            
            // If current value is less than the next value, we subtract it (like IV = 4)
            if(num(s[index]) < num(s[index + 1])){
                sum = sum - num(s[index]);
            }
            else{
                // Otherwise, just add it to the sum
                sum = sum + num(s[index]);
            }
        }

        // Add the value of the last character (since the loop stops at second last)
        sum = sum + num(s[s.size() - 1]);

        // Return the final integer value
        return sum;
    }
};
